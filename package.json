{
	"name": "fold-types",
	"displayName": "Fold Types",
	"description": "Fold on types (class, methods, etc..) instead of levels",
	"version": "1.0.0",
	"publisher": "outofsync42",
	"license": "MIT",
	"engines": {
		"vscode": "^1.67.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:fold-types.fold-all",
		"onCommand:fold-types.fold-parent",
		"onCommand:fold-types.fold-children",
		"onCommand:fold-types.unfold-all",
		"onCommand:fold-types.unfold-parent",
		"onLanguage:javascript",
		"onLanguage:typescript",
		"onLanguage:javascriptreact",
		"onLanguage:typescriptreact",
		"onLanguage:php"
	],
	"main": "./extension.js",
	"contributes": {
		"commands": [
			{
				"command": "fold-types.fold-all",
				"title": "Fold Types All",
				"when": "editorTextFocus && foldingEnabled"
			},
			{
				"command": "fold-types.fold-parent",
				"title": "Fold Types Parent",
				"when": "editorTextFocus && foldingEnabled"
			},
			{
				"command": "fold-types.fold-children",
				"title": "Fold Types Children",
				"when": "editorTextFocus && foldingEnabled"
			},
			{
				"command": "fold-types.unfold-all",
				"title": "UnFold Types All",
				"when": "editorTextFocus && foldingEnabled"
			},
			{
				"command": "fold-types.unfold-parent",
				"title": "UnFold Types Parent",
				"when": "editorTextFocus && foldingEnabled"
			}
		],
		"keybindings": [
			{
				"key": "",
				"command": "fold-types.fold-all",
				"when": "editorTextFocus && foldingEnabled"
			},
			{
				"key": "",
				"command": "fold-types.fold-parent",
				"when": "editorTextFocus && foldingEnabled"
			},
			{
				"key": "",
				"command": "fold-types.fold-children",
				"when": "editorTextFocus && foldingEnabled"
			},
			{
				"key": "",
				"command": "fold-types.unfold-all",
				"when": "editorTextFocus && foldingEnabled"
			},
			{
				"key": "",
				"command": "fold-types.unfold-parent",
				"when": "editorTextFocus && foldingEnabled"
			}
		],
		"configuration": [
			{
				"type": "object",
				"title": "Global",
				"properties": {
					"fold-types.global.class": {
						"type": "string",
						"enum": [
							"Yes",
							"No"
						],
						"default": "No",
						"description": "Global: Fold Classes",
						"order": 1
					},
					"fold-types.global.method": {
						"type": "string",
						"enum": [
							"Yes",
							"No"
						],
						"default": "Yes",
						"description": "Global: Fold Methods",
						"order": 1
					},
					"fold-types.global.object": {
						"type": "string",
						"enum": [
							"Yes",
							"No"
						],
						"default": "Yes",
						"description": "Global: Fold Objects"
					},
					"fold-types.global.array": {
						"type": "string",
						"enum": [
							"Yes",
							"No"
						],
						"default": "Yes",
						"description": "Global: Fold Arrays"
					},
					"fold-types.global.while": {
						"type": "string",
						"enum": [
							"Yes",
							"No"
						],
						"default": "No",
						"description": "Global: Fold While / Do"
					},
					"fold-types.global.if": {
						"type": "string",
						"enum": [
							"Yes",
							"No"
						],
						"default": "No",
						"description": "Global: Fold If"
					},
					"fold-types.global.else": {
						"type": "string",
						"enum": [
							"Yes",
							"No"
						],
						"default": "No",
						"description": "Global: Fold Else"
					},
					"fold-types.global.for": {
						"type": "string",
						"enum": [
							"Yes",
							"No"
						],
						"default": "No",
						"description": "Global: Fold For / Foreach"
					},
					"fold-types.global.switch": {
						"type": "string",
						"enum": [
							"Yes",
							"No"
						],
						"default": "No",
						"description": "Global: Fold Switch"
					},
					"fold-types.global.switchCase": {
						"type": "string",
						"enum": [
							"Yes",
							"No"
						],
						"default": "No",
						"description": "Global: Fold Switch Case"
					},
					"fold-types.global.switchDefault": {
						"type": "string",
						"enum": [
							"Yes",
							"No"
						],
						"default": "No",
						"description": "Global: Fold Switch Default"
					},
					"fold-types.global.try": {
						"type": "string",
						"enum": [
							"Yes",
							"No"
						],
						"default": "No",
						"description": "Global: Try"
					},
					"fold-types.global.tryCatch": {
						"type": "string",
						"enum": [
							"Yes",
							"No"
						],
						"default": "No",
						"description": "Global: Catch"
					},
					"fold-types.global.tryFinally": {
						"type": "string",
						"enum": [
							"Yes",
							"No"
						],
						"default": "No",
						"description": "Global: Finally"
					},
					"fold-types.global.comment": {
						"type": "string",
						"enum": [
							"Yes",
							"No"
						],
						"default": "No",
						"description": "Global: Fold Comments"
					}
				}
			},
			{
				"type": "object",
				"title": "Javascript",
				"properties": {
					"fold-types.js.class": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "JavaScript: Fold Classes"
					},
					"fold-types.js.method": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "JavaScript: Fold Methods"
					},
					"fold-types.js.object": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "JavaScript: Fold Objects"
					},
					"fold-types.js.objectFunctionParam": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "JavaScript: Fold objects when used as parameter in function calls"
					},
					"fold-types.js.objectObjectParam": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "JavaScript: Fold objects when set inside a parent object"
					},
					"fold-types.js.array": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "JavaScript: Fold Arrays"
					},
					"fold-types.js.arrayFunctionParam": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "JavaScript: Fold arrays when used as parameter in function calls"
					},
					"fold-types.js.arrayObjectParam": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "JavaScript: Fold arrays when set inside a parent object"
					},
					"fold-types.js.while": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "JavaScript: Fold While / Do"
					},
					"fold-types.js.if": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "JavaScript: Fold If"
					},
					"fold-types.js.else": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "JavaScript: Fold Else"
					},
					"fold-types.js.for": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "JavaScript: Fold For / Foreach"
					},
					"fold-types.js.switch": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "JavaScript: Fold Switch"
					},
					"fold-types.js.switchCase": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "JavaScript: Fold Switch Case"
					},
					"fold-types.js.switchDefault": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "JavaScript: Fold Switch Default"
					},
					"fold-types.js.try": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "JavaScript: Try"
					},
					"fold-types.js.tryCatch": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "JavaScript: Catch"
					},
					"fold-types.js.tryFinally": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "JavaScript: Finally"
					},
					"fold-types.js.comment": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "Global: Fold Comments"
					}
				}
			},
			{
				"type": "object",
				"title": "PHP",
				"properties": {
					"fold-types.php.class": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "PHP: Fold Classes"
					},
					"fold-types.php.method": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "PHP: Fold Methods"
					},
					"fold-types.php.array": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "PHP: Fold Arrays"
					},
					"fold-types.php.arrayFunctionParam": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "PHP: Fold arrays when used as parameter in function calls"
					},
					"fold-types.php.arrayObjectParam": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "PHP: Fold arrays when set inside a parent object"
					},
					"fold-types.php.while": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "PHP: Fold While / Do"
					},
					"fold-types.php.if": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "PHP: Fold If"
					},
					"fold-types.php.else": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "PHP: Fold Else"
					},
					"fold-types.php.for": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "PHP: Fold For / Foreach"
					},
					"fold-types.php.switch": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "PHP: Fold Switch"
					},
					"fold-types.php.switchCase": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "PHP: Fold Switch Case"
					},
					"fold-types.php.switchDefault": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "PHP: Fold Switch Default"
					},
					"fold-types.php.try": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "PHP: Try"
					},
					"fold-types.php.tryCatch": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "PHP: Catch"
					},
					"fold-types.php.tryFinally": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "PHP: Finally"
					},
					"fold-types.php.comment": {
						"type": "string",
						"enum": [
							"Yes",
							"No",
							"Use Global"
						],
						"default": "Use Global",
						"description": "PHP: Fold Comments"
					}
				}
			},
			{
				"type": "object",
				"title": "CSS",
				"properties": {
					"fold-types.css": {
						"type": "string",
						"enum": [
							"Yes",
							"No"
						],
						"default": "Yes",
						"description": "Global: Fold CSS"
					}
				}
			}
		]
	},
	"scripts": {
		"lint": "eslint .",
		"pretest": "npm run lint",
		"test": "node ./test/runTest.js"
	},
	"devDependencies": {
		"eslint": "^5.3.0",
		"eslint-config-airbnb-base": "^13.1.0",
		"eslint-plugin-import": "^2.17.2",
		"mocha": "^2.3.3",
		"vscode": "^1.0.0"
	}
}